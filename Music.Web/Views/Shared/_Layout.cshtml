@using Signum.Web.Auth
@using Signum.Web.Combine
@using Signum.Entities.Authorization
@using Signum.Engine.Authorization
@using Music.Web

<!doctype html>
<html>
<head>
    <title>@ViewBag.Title</title>

    @Html.ScriptCss(
        "~/Signum/Content/reset.css",
        "~/Content/smoothness/jquery-ui-1.10.2.custom.min.css",
        "~/Signum/Content/Lines.css",
        "~/Signum/Content/NormalPage.css",
        "~/Signum/Content/Notify.css",
        "~/Signum/Content/Search.css",    
        "~/Signum/Content/Widgets.css",
        "~/Content/site.css"
        )    
    
    @Html.ScriptsJs(
        "~/Scripts/promise-0.1.1.js",
        "~/Scripts/jquery-1.11.0.js",     
        "~/Scripts/jquery-ui-1.10.2.custom.min.js",
        "~/Scripts/require.js")  
    <script>
        require.config({
            baseUrl: '@Url.Content("~/Scripts")',
            paths: {
                "Framework/Signum.Web": "..",
                "Extensions/Signum.Web.Extensions": "..",

                "d3": "d3.v3.min",
                "colorbrewer": "/Scripts/colorbrewer",
                "ChartUtils": "../Chart/Scripts/ChartUtils",
            },
            shim: {
                d3: { exports: 'd3' },
                colorbrewer: { exports: 'colorbrewer' },
                ChartUtils : { exports: 'ChartUtils' }
            },
            urlArgs: "v=@ScriptHtmlHelper.Manager.Version"
        });
    </script>  

    @Html.ScriptsJs("~/Signum/resources/" + System.Globalization.CultureInfo.CurrentCulture.Name + ".js")
    @Html.ScriptsJs("~/Signum/calendarResources/" + System.Globalization.CultureInfo.CurrentCulture.Name + ".js")
    @Html.ScriptsJs("~/Signum/urls/signumCommon.js")
    
    @Html.ScriptsJs("~/Signum/Scripts/SF.js", "~/Signum/Scripts/SF.UI.js", "~/Scripts/newcontent.js")    

    @if (IsSectionDefined("head")) {
        @RenderSection("head")
    }
</head>

<body> 
    <div id="wrap">
        <header>
            <div id="user-info">
                @{ Html.RenderPartial(AuthClient.LoginUserControlView);}
            </div>    
                
            <div id="title">
                <h1>@(Html.ActionLink<HomeController>( "Signum Extensions Sample", c=>c.Index()))</h1>
            </div>
        </header>

        <div id="main">
            <div id="menu">
                @if (UserDN.Current != null && !UserDN.Current.Is(AuthLogic.AnonymousUser))
                {
                <div class="box menu">
                    <h2>Menú</h2>
                    @{ Html.RenderPartial("Menu", ViewData["current"] = Context.Request.RawUrl);}

                </div>
                }
            </div>
            <div id="content">
                @RenderBody()
            </div>
            <div class="clear"></div>
      </div>
      <footer>
            <div class="grid_8">
                <span id="powered">Powered by <span class="company">Signum Framework</span></span>
            </div>
            <div class="grid_8">            
                <ul>
                   <li><a href="Help">Documentación de ayuda</a></li>
                   <li><a href="mailto:soporte@signumsoftware.com">Soporte</a></li>
                </ul>
            </div>
        </footer>
    </div>        
</body>
</html>
